import reactStringReplace from "react-string-replace";
import daysLeft from "@/lib/daysLeft";

export default function stringReplacer(content: string) {
  const daysLeftRegex = /\{\{DAYS_LEFT,(\d{4}-\d{2}-\d{2})\}\}/;
  const sl2Regex = /sl\(2\)/g;

  if (content.match(daysLeftRegex)) {
    let daysLeftString: string;
    try {
      daysLeftString = daysLeft(content) || "";
      return (
        <>
          {reactStringReplace(content, daysLeftRegex, (_, index) => (
            <span key={index}>{daysLeftString}</span>
          ))}
        </>
      );
    } catch (e) {
      return ""; // Return nothing if date is in the past
    }
  } else if (content.match(sl2Regex)) {
    const contentWithoutMatch = content.split(sl2Regex)[1]; // Hot fix: Rewrite this later - Raise issue on github
    return (
      <>
        {reactStringReplace(content, sl2Regex, (_, index) => (
          <span key={index}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 131 91">
              <path d="M130.83 15.66c-.43 3.65-.53 3.43-3.56 2.84-11.1-2.19-22.2-4.35-33.29-6.59-8.8-1.78-17.6-3.61-26.38-5.51-2.2-.48-4.22.19-6.27.6-14.6 2.9-29.19 5.86-43.79 8.81L3.11 18.72c-1.37.28-1.66.08-2.02-1.3-.66-2.45-.53-2.68 1.71-3.2 12.44-2.87 24.87-5.77 37.32-8.63C48.26 3.72 56.41 1.85 64.58.11c1.27-.27 2.72.02 4.03.31 7.43 1.62 14.85 3.32 22.28 5l35.41 8.01c1.14.26 2.27.54 3.4.8.83.2 1.38.6 1.14 1.44ZM82.28 36.81c1.97.32 3.56.95 4.04 2.98.4 1.65-.09 3.05-1.37 4.14-1.35 1.14-2.89 1.27-4.44.54-1.52-.72-2.1-2.07-2.06-3.7.11-4.47 2.26-7.81 5.98-10.06 6.75-4.07 16.6-.89 19.75 6.32 2.23 5.09 1.31 9.86-2.17 14-2.13 2.54-4.68 4.72-7.08 7.02-3.13 3-6.3 5.95-9.44 8.93-.26.25-.45.57-.75.96h2.43c3.71 0 7.42.02 11.12-.04 2.99-.05 2.99-.11 3.71-2.98.12-.48.23-.97.31-1.47.36-2.17.58-2.32 3.12-1.89-.23 1.7-.44 3.42-.69 5.13-.31 2.1-.66 4.19-.96 6.29-.1.72-.36 1.14-1.17 1.13-7.96-.02-15.91-.01-23.87-.02-.07 0-.15-.06-.3-.12-.4-1.44.16-2.65 1.1-3.71 2.58-2.89 5.23-5.72 7.77-8.64 2.49-2.86 4.96-5.73 7.29-8.72 1.92-2.46 3.28-5.26 3.58-8.4.34-3.58-.3-7.03-2.68-9.85-3.44-4.07-10.45-3.22-12.98 1.46-.09.17-.13.38-.24.69ZM21.27 48.09c-2.3-1.89-7.13-1.91-9.01-.29-1.37 1.18-1.86 2.74-1.9 4.45-.03 1.05.56 1.85 1.56 2.2 1.73.6 3.49 1.09 5.22 1.67.82.28 1.66.58 2.41 1.01 2.88 1.65 4.18 4.52 3.38 7.75-1.23 4.98-4.11 8.39-9.36 9.37-3.19.6-6.37.79-9.48-.38-2.78-1.04-4.48-3.97-4-6.88.29-1.77 1.64-3.13 3.48-3.49 1.07-.21 2.12-.18 2.86.75.79 1 .96 2.24.3 3.28-.6.94-1.56 1.66-2.4 2.43-.25.23-.63.32-1.09.55 2.57 1.62 5.21 2.03 8.02 1.78 2.01-.18 3.81-.74 5.24-2.29 1.07-1.16 1.64-2.52 1.71-4.06.07-1.53-.78-2.64-2.11-3.26-.97-.46-2.04-.7-3.07-1.01-.99-.3-2.02-.5-3-.84-3.6-1.27-5.2-4.2-4.48-7.97 1.41-7.33 9.8-10.59 15.84-7.72 2.55 1.21 3.92 4.09 3.21 6.51-.51 1.73-2.67 2.93-4.37 2.43-1.54-.45-2.09-2.16-1.06-3.63.6-.85 1.4-1.57 2.11-2.35ZM46.3 27.16c-.49 2.11-.91 4.05-1.38 5.97-2.74 11.05-5.5 22.1-8.22 33.16-.29 1.16-.41 2.38-.49 3.58-.07.97.03 1.99 1.13 2.41 1.1.41 1.97-.2 2.39-1.07.91-1.9 1.68-3.86 2.4-5.84.58-1.58.81-1.79 2.61-1.59.04.21.16.45.12.67-.5 2.89-1.22 5.7-3.14 8.03-2.09 2.52-4.37 2.99-7.47 1.57-2.48-1.14-3.9-3.68-3.28-6.49.95-4.38 2.11-8.72 3.18-13.08 1.76-7.19 3.53-14.37 5.29-21.56.39-1.59.22-1.81-1.41-1.97-1.1-.11-2.2-.17-3.25-.25-.22-2.04.49-2.91 2.23-3.02 2.57-.17 5.15-.34 7.72-.5.44-.03.88 0 1.57 0ZM112.72 23.7c1.05-.91 1.88-.56 2.69.07 2.94 2.28 5.18 5.17 7.15 8.28 3.17 5.02 4.76 10.62 5.65 16.4 1.34 8.77.92 17.48-1.96 25.9-2.14 6.25-5.46 11.87-10.72 16.11-1.1.89-1.2.87-2.77.24.33-.49.58-.99.95-1.39 6.13-6.6 8.82-14.63 9.89-23.38.95-7.76.65-15.45-.96-23.1-1.38-6.56-4.09-12.47-8.62-17.47-.46-.51-.85-1.08-1.3-1.66ZM71.15 90.64c-1.34.84-2.25.38-3.16-.45-5.87-5.25-9.52-11.79-11.3-19.42-2.57-11.04-2.32-21.98 1.66-32.66 2.1-5.62 5.56-10.39 10.09-14.36.79-.7 1.63-.72 2.63-.18-.27.39-.49.78-.77 1.12-5.63 6.72-8.98 14.4-9.95 23.13-1.08 9.7-.72 19.28 2.2 28.65 1.37 4.38 3.63 8.29 6.64 11.76.65.75 1.26 1.53 1.97 2.4Z" />
            </svg>
            {contentWithoutMatch}
          </span>
        ))}
      </>
    );
  } else {
    return content;
  }
}
